@model ConsulTech.Web.Models.ViewModels.Dashboard.DashboardVm
@{
    ViewData["Title"] = "Dashboard";
}
<h1 class="mb-4">Dashboard</h1>

<div class="row g-3">
    <div class="col-md-4">
        <div class="card shadow-sm">
            <div class="card-body" style="min-height: 10rem;">
                <h6 class="text-muted">Clients</h6>
                <h3 class="mb-0">@Model.TotalClients</h3>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card shadow-sm">
            <div class="card-body" style="min-height: 10rem;">
                <h6 class="text-muted">Missions (total)</h6>
                <h3 class="mb-0">@Model.TotalMissions</h3>
                <small class="text-muted">En cours: @Model.MissionsEnCours • À venir: @Model.MissionsAVenir</small>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card shadow-sm">
            <div class="card-body" style="min-height: 10rem;">
                <h6 class="text-muted">Budget en cours</h6>
                <h3 class="mb-0">@Model.BudgetTotalEnCours.ToString("N2")</h3>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="card shadow-sm">
            <div class="card-body" style="min-height: 10rem;">
                <h6 class="text-muted">Consultants</h6>
                <h3 class="mb-0">@Model.ConsultantsTotal</h3>
                <small class="text-muted">Disponibles: @Model.ConsultantsDisponibles</small>
            </div>
        </div>
    </div>
</div>

<div class="row g-3 mt-4">
    <div class="col-lg-6">
        <div class="card shadow-sm">
            <div class="card-body" style="min-height: 10rem;">
                <h5 class="card-title">Missions à venir</h5>
                @if (Model.UpcomingMissions == null || Model.UpcomingMissions.Count == 0)
                {
                    <div class="text-muted">Aucune mission planifiée.</div>
                }
                else
                {
                    <table class="table table-sm align-middle mb-0">
                        <thead>
                            <tr>
                                <th>Titre</th>
                                <th>Client</th>
                                <th>Début</th>
                                <th class="text-end"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var m in Model.UpcomingMissions)
                            {
                                <tr>
                                    <td>@m.Titre</td>
                                    <td>@m.ClientNom</td>
                                    <td>@m.Debut.ToShortDateString()</td>
                                    <td class="text-end">
                                        <a class="btn btn-sm btn-outline-primary"
                                           asp-controller="Missions"
                                           asp-action="Details"
                                           asp-route-id="@m.Id">
                                            Ouvrir
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>

    <div class="col-lg-6">
        <div class="card shadow-sm">
            <div class="card-body" style="min-height: 10rem;">
                <h5 class="card-title">Consultants disponibles</h5>
                @if (Model.ConsultantsDispos == null || Model.ConsultantsDispos.Count == 0)
                {
                    <div class="text-muted">Aucun consultant disponible.</div>
                }
                else
                {
                    <ul class="list-group list-group-flush">
                        @foreach (var c in Model.ConsultantsDispos)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <div>
                                    <div class="fw-semibold">@c.NomComplet</div>
                                    <div class="text-muted small">@c.Email</div>
                                </div>
                                <a class="btn btn-sm btn-outline-secondary"
                                   asp-controller="Consultants"
                                   asp-action="Details"
                                   asp-route-id="@c.Id">
                                    Voir
                                </a>
                            </li>
                        }
                    </ul>
                }
            </div>
        </div>
    </div>
</div>

<h5 class="mt-4">Outils de reporting</h5>

<canvas id="barCanvas" aria-label="Valeur budgétaire client" style="width: 600px !important; height: 400px !important"></canvas>

<canvas id="doughNutCanvas" aria-label="Compétences chez ConsulTech" width="200" height="200"></canvas>

@section Scripts {

    <script>
        var labels = [];
        var budgetParCLient = {};

        console.log(budgetParCLient);

        fetch("https://localhost:7136/api/mission", {
            method: "GET",
            headers: {
                "Content-Type": "application/json"
            }
        })
        .then(response => response.json())
        .then(data => {
            console.log(data);

            const ctx = document.getElementById('barCanvas').getContext('2d');

            data.forEach(function(item) {
                if(budgetParCLient[item.clientNom]) {
                    budgetParCLient[item.clientNom] += item.budget;
                } else {
                    budgetParCLient[item.clientNom] = item.budget;
                }
                labels.push(item.clientNom);
            });

            labels = Object.keys(budgetParCLient);
            var budget = Object.values(budgetParCLient);

            new Chart(ctx, {
              type: 'bar',
              data: {
                labels: [...labels],
                datasets: [{
                  label: 'Valeur budgétaire',
                  data: [...budget],
                  borderWidth: 1,
                  backgroundColor: "rgb(140, 189, 207)",
                }]
              },
              options: {
                scales: {
                  y: {
                    beginAtZero: true
                  }
                },
                layout: {
                    padding: 150
                },
                plugins: {
                    title: {
                        text: "Valeur budgétaire par client",
                        display: true,
                        position: "top"
                    }
                }
              }
            });
        })
        .catch(error => console.error('Error fetching data:', error));

        var countParCompetence = {};

        fetch("https://localhost:7136/api/competence", {
            method: "GET",
            headers: {
                "Content-Type": "application/json"
            }
        })
        .then(response => response.json())
        .then(data => {
            console.log(data)
            data.forEach(function(item) {
                if(countParCompetence[item.titre]) {
                    countParCompetence[item.titre] += 1;
                } else {
                    countParCompetence[item.titre] = 1;
                }
            });
            console.log(countParCompetence);
            var labelsDonut = Object.keys(countParCompetence);
            var valuesDonut = Object.values(countParCompetence);

            console.log(labelsDonut, valuesDonut)
            const ctx = document.getElementById('doughNutCanvas').getContext('2d');
            new Chart(ctx, {
              type: 'doughnut',
              data: {
                    labels: [...labelsDonut],
                    datasets: [{
                      label: 'Collaborateurs',
                      data: [...valuesDonut],
                      backgroundColor: [
                        'rgb(255, 99, 132)',
                        'rgb(54, 162, 235)',
                        'rgb(255, 205, 86)'
                      ],
                      hoverOffset: 4
                    }]
              },
              options: {
                scales: {
                  y: {
                    beginAtZero: true
                  }
                },
                layout: {
                    padding: 250
                },
                plugins: {
                    title: {
                        text: "Compétence par collaborateur",
                        display: true,
                        position: "top"
                    }
                }
              }
            });
        }).catch(error => console.error('Error fetching data:', error));
    </script>
}
